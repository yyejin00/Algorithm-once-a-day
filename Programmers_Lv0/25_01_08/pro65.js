/* k의 개수
1부터 13까지의 수에서, 1은 1, 10, 11, 12, 13 이렇게 총 6번 등장합니다. 정수 i, j, k가 매개변수로 주어질 때, i부터 j까지 k가 몇 번 등장하는지 return 하도록 solution 함수를 완성해주세요.

제한사항
1 ≤ i < j ≤ 100,000
0 ≤ k ≤ 9
입출력 예
i j k result
1 13 1 6
10 50 5 5
3 10 2 0
입출력 예 설명
입출력 예 #1

본문과 동일합니다.
입출력 예 #2

10부터 50까지 5는 15, 25, 35, 45, 50 총 5번 등장합니다. 따라서 5를 return 합니다.
입출력 예 #3

3부터 10까지 2는 한 번도 등장하지 않으므로 0을 return 합니다.

내풀이
 */
function solution(i, j, k) {
  return (
    Array(j - i + 1)
      .fill()
      .map((a, b) => {
        return i + b;
      })
      .join("")
      .split(k).length - 1
  );
}

/* 학 사실 처음에는 join했다가 또 split으로 나눠서 filter함수를 사용하려고 했는데, 에러가 생겼다. 값을 나눠서 join()까지 작성한 변수를 split하고 싶었는데 그냥 한줄에 써보고 싶었다.
  
  다른 방식을 블로그로 찾아봤었다.
  맨날 split하면 나눌줄만알았지 인수로 다른 값을 넣어볼 생각은 못 했다.
  length에다가 -1을 한 이유는
  예시를 들어보자면 3을 기준으로 split 하게되면 아래와 같이 배열의 길이가 5가 된다.
  [111111113,3,3,223,1]
  split하게되면서 찾으려던 숫자의 갯수보다 +1되어 나눠지고, 그래서 -1을 해서 갯수가 얼마인지 찾는 것~ */
